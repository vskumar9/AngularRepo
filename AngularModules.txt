In Angular of module is a way of organizing and packaging related 
components, services, directives, and other building blocks of an 
application. It acts as a container that groups together the functionality 
required for a specific feature or a set of closely related features.

Angular provides two types of modules: Root Module and Feature Module.

To create module, you use the @NgModule decorator provided by angular.

1. **@NgModule**: This is the primary decorator used to define an Angular module. It is
applied to a class that represents the module. The @NgModule decorator takes a metadata object as an
argument, which contains information about the module, such as its name, imports, declarations, providers,
and exports.
2. **NgModule metadata**: This is an object that contains information about the module. It has several
properties, including:
- **declarations**: An array of components, directives, and pipes that belong to the module
- **imports**: An array of modules that the current module depends on
- **providers**: An array of services that the module provides
- **exports**: An array of components, directives, and pipes that are exposed by the module for
importing in other modules
3. **NgModule lifecycle hooks**: These are methods that are called at different points in the module's
lifecycle. They can be used to perform initialization, configuration, and cleanup tasks.
